<h2>CatPhotoApp</h2>
<main>
  <p>Click here to view more <a href="#">cat photos</a>.</p>

  <a href="#"><img src="https://cdn.freecodecamp.org/curriculum/cat-photo-app/relaxing-cat.jpg" alt="A cute orange cat lying on its back."></a>

  <p>Things cats love:</p>
  <ul>
    <li>cat nip</li>
    <li>laser pointers</li>
    <li>lasagna</li>
  </ul>
  <p>Top 3 things cats hate:</p>
  <ol>
    <li>flea treatment</li>
    <li>thunder</li>
    <li>other cats</li>
  </ol>
  <input type="text">
</main>

1
// Only change code below this line
var a = 5;
var b = 10;
var c = "I am a";
// Only change code above this line

a = a + 1;
b = b + 5;
c = c + " String!";

2
// Variable declarations
var studlyCapvar;
var properCamelCase;
var titleCaseOver;

// Variable assignments
studlyCapvar = 10;
properCamelCase = "A String";
titleCaseOver = 9000;

3
const FCC = "freeCodeCamp"; // Change this line
let fact = "is cool!"; // Change this line
fact = "is awesome!";
console.log(FCC, fact); // Change this line

4
let a = 3;
let b = 17;
let c = 12;

// Only change code below this line
a += 12;
b += 9;
c += 7;

5
let a = 5;
let b = 12;
let c = 4.6;

// Only change code below this line
a *= 5;
b *= 3;
c *= 10;

6
var myStr = "FirstLine\n\t\\SecondLine\nThirdLine";

7
const someAdjective = "cool";
let myStr = "Learning to code is ";
myStr += someAdjective;

8
let lastNameLength = 0;
const lastName = "Lovelace";

// Only change code below this line
lastNameLength = lastName.length;

9
let firstLetterOfLastName = "";
const lastName = "Lovelace";

// Only change code below this line
firstLetterOfLastName = lastName [0];

10
// Setup
const lastName = "Lovelace";

// Only change code below this line
const lastLetterOfLastName = lastName [lastName.length - 1]; // Change this line

11
const myNoun = "dog";
const myAdjective = "big";
const myVerb = "ran";
const myAdverb = "quickly";

// Only change code below this line
const wordBlanks = "It was " + myAdjective + " " + myNoun + " and her " + myVerb + " " + myAdverb + "."; // Change this line
// Only change code above this line
wordBlanks;
'It was big dog and her ran quickly.'

12
const myArray = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 9],
  [[10, 11, 12], 13, 14],
];

const myData = myArray[2][1];

13
const myArray = [["John", 23], ["cat", 2]];
myArray.push(["dog", 3]);

14
const myArray = [["John", 23], ["cat", 2]];
const removedFromMyArray = myArray.pop();

15
const myArray = [["John", 23], ["dog", 3]];
const removedFromMyArray = myArray.shift();

16
const myArray = [["John", 23], ["dog", 3]];
myArray.shift();
myArray.unshift(["Paul", 35]);

17
function reusableFunction() {
  console.log("Hi World");
}
reusableFunction()

18
function functionWithArgs(param1, param2) {
  console.log(param1 + param2);
}
functionWithArgs (1,2);
functionWithArgs (7,9);

19
function timesFive(num) {
  return num * 5;
}

const answer = timesFive(5);

20
// Declare the myGlobal variable below this line
let myGlobal = 10;

function fun1() {
  oopsGlobal = 5;
  // Assign 5 to oopsGlobal Here

}

// Only change code above this line

function fun2() {
  var output = "";
  if (typeof myGlobal != "undefined") {
    output += "myGlobal: " + myGlobal;
  }
  if (typeof oopsGlobal != "undefined") {
    output += " oopsGlobal: " + oopsGlobal;
  }
  console.log(output);
}

21
function myLocalScope() {
  // Only change code below this line
const myVar = "myLocalScope";
  console.log('inside myLocalScope', myVar);
}
myLocalScope();

// Run and check the console
// myVar is not defined outside of myLocalScope
console.log('outside myLocalScope', myVar);

22
// Setup
const outerWear = "T-Shirt";

function myOutfit() {
  // Only change code below this line
const outerWear = "sweater";
  // Only change code above this line
  return outerWear;
}

myOutfit();

23
// Setup
let sum = 0;

function addThree() {
  sum = sum + 3;
}

// Only change code below this line
function addFive () {
sum = sum + 5;
}

// Only change code above this line

addThree();
addFive();

24
let processed = 0;

function processArg(num) {
  return (num + 3) / 5;

}

// Only change code below this line
processed = processArg(7);

25
function nextInLine(arr, item) {
  // Only change code below this line
  arr.push(item);
   const removed = arr.shift();
  return removed;
  // Only change code above this line
}

// Setup
const testArr = [1, 2, 3, 4, 5];

// Display code
console.log("Before: " + JSON.stringify(testArr));
console.log(nextInLine(testArr, 6));
console.log("After: " + JSON.stringify(testArr));

26
function trueOrFalse(wasThatTrue) {
  // Only change code below this line
if (wasThatTrue) {
    return "Yes, that was true";
  }
  return "No, that was false";


  // Only change code above this line

}

27
// Setup
function testEqual(val) {
  if (val == 12) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

testEqual(10);

28
// Setup
function testStrict(val) {
  if (val === 7) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

testStrict(10);

29
function compareEquality(a, b) {
  if (a === b) { // Change this line
    return "Equal";
  }
  return "Not Equal";
}

compareEquality(10, "10");

30
function testNotEqual(val) {
  if (val != 99) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testNotEqual(10);

31
function testStrictNotEqual(val) {
  if (val !== 17) { // Change this line
    return "Not Equal";
  }
  return "Equal";
}

testStrictNotEqual(10);

32
function testGreaterThan(val) {
  if (val > 100) {  // Change this line
    return "Over 100";
  }

  if (val > 10) {  // Change this line
    return "Over 10";
  }

  return "10 or Under";
}

testGreaterThan(10);

33
function testGreaterOrEqual(val) {
  if (val >= 20) {  // Change this line
    return "20 or Over";
  }

  if (val >= 10) {  // Change this line
    return "10 or Over";
  }

  return "Less than 10";
}

testGreaterOrEqual(10);

34
function testLessThan(val) {
  if (val < 25) {  // Change this line
    return "Under 25";
  }

  if (val < 55) {  // Change this line
    return "Under 55";
  }

  return "55 or Over";
}

testLessThan(10);

35
function testLessOrEqual(val) {
  if (val <= 12) {  // Change this line
    return "Smaller Than or Equal to 12";
  }

  if (val <= 24) {  // Change this line
    return "Smaller Than or Equal to 24";
  }

  return "More Than 24";
}

testLessOrEqual(10);

36
function testLogicalAnd(val) {
  // Only change code below this line

  if (val <= 50 && val >= 25) {
      return "Yes";
  }

  // Only change code above this line
  return "No";
}

testLogicalAnd(10);

37
function testLogicalOr(val) {
  // Only change code below this line

  if (val > 20 || val < 10) {
    return "Outside";
  }

  // Only change code above this line
  return "Inside";
}

testLogicalOr(15);


38
function testElse(val) {
  let result = "";
  // Only change code below this line

  if (val > 5) {
    result = "Bigger than 5";
  }

  else {
    result = "5 or Smaller";
  }

  // Only change code above this line
  return result;
}

testElse(4);

39
function testElseIf(val) {
  if (val > 10) {
    return "Greater than 10";
  } else if (val < 5) {
    return "Smaller than 5";
  } else {
  return "Between 5 and 10";
}

}
testElseIf(7);

40
function orderMyLogic(val) {
  if (val < 5) {
    return "Less than 5";
  } else if (val < 10) {
    return "Less than 10";
  } else {
    return "Greater than or equal to 10";
  }
}

orderMyLogic(7);


41
function testSize(num) {
  // Only change code below this line
if (num < 5) {
  return "Tiny";
} else if (num < 10) {
  return "Small";
} else if (num < 15) {
  return "Medium";
} else if (num < 20) {
  return "Large";
} else if (num >= 20) {
  return "Huge";
}
  return "Change Me";
  // Only change code above this line
}

testSize(7);

42
const names = ["Hole-in-one!", "Eagle", "Birdie", "Par", "Bogey", "Double Bogey", "Go Home!"];

function golfScore(par, strokes) {
  // Only change code below this line
if (strokes == 1) {
  return names [0];
}
else if (strokes <= par - 2) {
  return names [1];
}
else if (strokes === par - 1) {
  return names [2];
}
else if (strokes === par) {
  return names [3];
}
else if (strokes === par + 1) {
  return names [4];
}
else if (strokes === par + 2) {
  return names [5];
}
else {
  return names [6];
}
  return "Change Me";
  // Only change code above this line
}

golfScore(5, 4);

43
function caseInSwitch(val) {
  let answer = "";
  // Only change code below this line
 switch (val) {
    case 1:
      answer = "alpha";
      break;
    case 2:
      answer = "beta";
      break;
    case 3:
      answer = "gamma";
      break;
    case 4:
      answer = "delta";
      break;
  }
  // Only change code above this line
  return answer;
}

caseInSwitch(1);

44
function switchOfStuff(val) {
  let answer = "";
  // Only change code below this line
 switch (val) {
   case "a":
   answer = "apple";
    break;
    case "b":
   answer = "bird";
    break;
    case "c":
   answer = "cat";
    break;
default:
 answer = "stuff";
 break;
 }


  // Only change code above this line
  return answer;
}

switchOfStuff(1);

45
function sequentialSizes(val) {
  let answer = "";
  // Only change code below this line
switch (val) {
  case 1:
  case 2:
  case 3:
  return "Low";
    break;
  case 4:
  case 5:
  case 6: 
return "Mid";
    break;
 case 7:
  case 8:
  case 9: 
 return "High";
    break;   
  // Only change code above this line
  return answer;
}
}
sequentialSizes(1);

46
function chainToSwitch(val) {
  let answer = "";
  // Only change code below this line

  switch (val) {
case "bob":
    answer = "Marley";
     break;
case 42:
    answer = "The Answer";
     break;
case 1:
    answer = "There is no #1";
     break;
 case 99:
    answer = "Missed me by this much!";
     break; 
case 7:
    answer = "Ate Nine";
     break; 

  }

  // Only change code above this line
  return answer;
}

chainToSwitch(7);

47
function isLess(a, b) {
  // Only change code below this line
  return a < b;
  // Only change code above this line
}

isLess(10, 15);

48
// Setup
function abTest(a, b) {
  // Only change code below this line
if (a < 0 || b < 0) {
  return undefined;
}
  // Only change code above this line

  return Math.round(Math.pow(Math.sqrt(a) + Math.sqrt(b), 2));
}

abTest(2,2);

49  (про карты)
let count = 0;

function cc(card) {
  // Only change code below this line
switch (card) {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      count++;
      break;
    case 10:
    case "J":
    case "Q":
    case "K":
    case "A":
      count--;
      break;
  }
  if (count > 0) {
    return count + " Bet";
  } else {
    return count + " Hold";
  }
  return "Change Me";
  // Only change code above this line
}

cc(2); cc(3); cc(7); cc('K'); cc('A');

50
const myDog = {
  // Only change code below this line
name: "Runny",
legs: 4,
tails: 2,
friends: ["cat", "snow"]

  // Only change code above this line
};

51 
Доступ к свойствам объекта через точку
// Setup
const testObj = {
  "hat": "ballcap",
  
  52
  function checkObj(obj, checkProp) {
  // Only change code below this line

  if (obj.hasOwnProperty(checkProp)) {
    return obj[checkProp];
  } else {
    return "Not Found";
  }
}
  "shirt": "jersey",
  "shoes": "cleats"
};

// Only change code below this line
const hatValue = testObj.hat;      // Change this line

52
через скобки
// Setup
const testObj = {
  "an entree": "hamburger",
  "my side": "veggies",
  "the drink": "water"
};

// Only change code below this line
const entreeValue = testObj["an entree"];   // Change this line
const drinkValue = testObj["the drink"];    // Change this line
const shirtValue = testObj.shirt;    // Change this line

53
const testObj = {
  12: "Namath",
  16: "Montana",
  19: "Unitas"
};

// Only change code below this line
const playerNumber = 16;  // Change this line
const player = testObj[playerNumber];   // Change this lin

54
const myDog = {
  "name": "Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};

// Only change code below this line
myDog.name = "Happy Coder";

55
Добавление свойств
const myDog = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"]
};

myDog.bark = "bow";

56
удаление свойства
const myDog = {
  "name": "Happy Coder",
  "legs": 4,
  "tails": 1,
  "friends": ["freeCodeCamp Campers"],
  "bark": "woof"
};

// Only change code below this line

57
const myStorage = {
  "car": {
    "inside": {
      "glove box": "maps",
      "passenger seat": "crumbs"
     },
    "outside": {
      "trunk": "jack"
    }
  }
};

const gloveBoxContents = myStorage.car.inside["glove box"];

58
const myPlants = [
  {
    type: "flowers",
    list: [
      "rose",
      "tulip",
      "dandelion"
    ]
  },
  {
    type: "trees",
    list: [
      "fir",
      "pine",
      "birch"
    ]
  }
];

const secondTree = myPlants[1].list[1];
delete myDog.tails;

57
function phoneticLookup(val) {
  let result = "";

  // Only change code below this line
  const lookup = {
   "alpha": "Adams",
   "bravo": "Boston",
   "charlie": "Chicago",
   "delta": "Denver",
   "echo": "Easy",
   "foxtrot": "Frank"
  }
  result = lookup[val];
  // Only change code above this line
  return result;
}

phoneticLookup("charlie");

58
const myMusic = [
  {
    "artist": "Billy Joel",
    "title": "Piano Man",
    "release_year": 1973,
    "formats": [
      "CD",
      "8T",
      "LP"
    ],
    "gold": true
  },
  {
"artist": "FG TU",
"title": "Tuf her",
"release_year": 1290,
"formats": [
  "HU",
  "8j",
  "GH"]
}
];

59
const myArray = [];
let i = 0;

while (i <= 5) {
  myArray.unshift (i);
  i++;
}

60
const myArray = [];
for (let i = 1; i < 6; i++) {
  myArray.push(i);
}

61
const myArray = [];
for (let i = 1; i < 10; i += 2) {
  myArray.push(i);
}

62
const myArray = [];
for (let i = 9; i > 0; i -= 2) {
  myArray.push(i);
}

63
const myArr = [2, 3, 4, 5, 6];
let total = 0;
for (let i = 0; i < myArr.length; i++) {
  total += myArr[i];
}

64
function multiplyAll(arr) {
  let product = 1;
  // Only change code below this line
for (let i = 0; i < arr.length; i++) {
  for (let j = 0; j < arr[i].length; j++) {
    product = product * arr[i][j];
  }
}
  // Only change code above this line
  return product;
}

multiplyAll([[1, 2], [3, 4], [5, 6, 7]]);

65
const myArray = [];
let i = 10;

// Only change code below this line
do {
  myArray.push(i);
  i++;
}
while (i < 5);
